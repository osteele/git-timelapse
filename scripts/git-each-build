#!/usr/bin/env ruby

require 'fileutils'
require 'open3'
require 'optparse'
require 'shellwords'
require 'time'
require 'tmpdir'

def parse_options!
    args = ARGV
    cmd = []
    if args.include?('--')
        i = args.index('--')
        cmd = args.drop(i+1)
        args = args.take(i)
    end

    options = {}
    OptionParser.new do |opts|
    opts.banner = "Usage: git-each-build [OPTIONS] -- COMMAND [ARGS]"

    opts.on("-d", "--dir DIR", "Repository working directory") do |dir|
        options[:dir] = dir
    end
    opts.on("-f", "--force", "git clean and git checkout --force") do |flag|
        options[:force] = flag
    end
    opts.on("--stdout", "Capture command output to stdout.txt") do |flag|
        options[:stdout] = flag
    end
    end.parse!(args)

    options[:cmd] = cmd
    options[:files] = args
    return options
end

options = parse_options!

build_dir = File.join(Dir.pwd, 'git-each-build')
FileUtils.rm_rf build_dir
FileUtils.mkdir build_dir

Dir.chdir(options[:dir]) if options[:dir]

saved_hash = `git log --format=%H -n 1`.chomp
puts "Saved git HEAD #{saved_hash}"

at_exit do
    puts "Restoring original git HEAD #{saved_hash}"
    system "git checkout #{saved_hash}"
end

FOLLOW = if options[:files].size == 1 then '--follow' else nil end

for h, d in `git log --reverse --format='%H %aI' --date=iso #{FOLLOW} -- #{Shellwords.join options[:files]}`.scan /^(\S+) (.+)$/ do
    tmp_build_dir = Dir.mktmpdir
    puts "Checking out HEAD For #{Time.parse(d)}"
    if options[:force]
        system "git clean -f"
        system "git checkout -f #{h}"
    else
        system "git checkout #{h}"
    end
    ENV['GIT_EACH_HASH'] = h
    ENV['GIT_EACH_BUILD_DIR'] = tmp_build_dir
    out = `#{Shellwords.join options[:cmd]}`
    puts out if $?.exitstatus != 0
    open File.join(tmp_build_dir, 'stdout.txt'), 'w' do |f|
        f.write(out)
    end if options[:stdout]
    FileUtils.mv tmp_build_dir, File.join(build_dir, d)
end

puts "Results are in #{build_dir}"

at_exit do
    puts "Results are in #{build_dir}"
end

